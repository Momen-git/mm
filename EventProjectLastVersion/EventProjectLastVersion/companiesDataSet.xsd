<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="companiesDataSet" targetNamespace="http://tempuri.org/companiesDataSet.xsd" xmlns:mstns="http://tempuri.org/companiesDataSet.xsd" xmlns="http://tempuri.org/companiesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="companiesConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="companiesConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EventProjectLastVersion.Properties.Settings.GlobalReference.Default.companiesConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="companiesTableAdapter" GeneratorDataComponentClassName="companiesTableAdapter" Name="companies" UserDataComponentName="companiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="companiesConnectionString (Settings)" DbObjectName="dbo.companies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[companies] WHERE (([name] = @Original_name) AND ([discound] = @Original_discound))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_discound" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="discound" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[companies] ([name], [discound]) VALUES (@name, @discound);
SELECT name, discound FROM companies WHERE (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@discound" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="discound" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT name, discound FROM dbo.companies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[companies] SET [name] = @name, [discound] = @discound WHERE (([name] = @Original_name) AND ([discound] = @Original_discound));
SELECT name, discound FROM companies WHERE (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@discound" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="discound" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_discound" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="discound" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="discound" DataSetColumn="discound" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="companiesConnectionString (Settings)" DbObjectName="dbo.companies" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT  * FROM companies WHERE [discound] = @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="discound" DataSourceName="[C:\USERS\DELL G15\SOURCE\REPOS\EVENTPROJECTLASTVERSION\EVENTPROJECTLASTVERSION\COMPANIES.MDF].dbo.companies" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="discound" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="companiesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="companiesDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="companiesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="companies" msprop:Generator_RowClassName="companiesRow" msprop:Generator_RowEvHandlerName="companiesRowChangeEventHandler" msprop:Generator_RowDeletedName="companiesRowDeleted" msprop:Generator_RowDeletingName="companiesRowDeleting" msprop:Generator_RowEvArgName="companiesRowChangeEvent" msprop:Generator_TablePropName="companies" msprop:Generator_RowChangedName="companiesRowChanged" msprop:Generator_UserTableName="companies" msprop:Generator_RowChangingName="companiesRowChanging" msprop:Generator_TableClassName="companiesDataTable" msprop:Generator_TableVarName="tablecompanies">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnVarNameInTable="columnname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="discound" msprop:Generator_UserColumnName="discound" msprop:Generator_ColumnPropNameInTable="discoundColumn" msprop:Generator_ColumnPropNameInRow="discound" msprop:Generator_ColumnVarNameInTable="columndiscound" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:companies" />
      <xs:field xpath="mstns:name" />
    </xs:unique>
  </xs:element>
</xs:schema>